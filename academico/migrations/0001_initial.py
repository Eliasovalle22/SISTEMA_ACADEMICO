# Generated by Django 5.2.7 on 2025-10-15 01:59

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('codigo_aula', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nombre_aula', models.CharField(max_length=100)),
                ('capacidad', models.IntegerField(default=30)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
            },
        ),
        migrations.CreateModel(
            name='Facultad',
            fields=[
                ('codigo_facultad', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nombre_facultad', models.CharField(max_length=200)),
                ('numero_programas', models.IntegerField(default=0)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Facultad',
                'verbose_name_plural': 'Facultades',
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('codigo_materia', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nombre_materia', models.CharField(max_length=200)),
                ('numero_creditos', models.IntegerField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
            },
        ),
        migrations.CreateModel(
            name='Microcurriculo',
            fields=[
                ('codigo_microcurriculo', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nombre_materia', models.CharField(max_length=200)),
                ('numero_creditos', models.IntegerField()),
                ('nivel_superior', models.TextField()),
                ('nivel_normal', models.TextField()),
                ('nivel_bajo', models.TextField()),
                ('nivel_deficiente', models.TextField()),
                ('prerequisitos', models.TextField(blank=True, null=True)),
                ('departamento_oferente', models.CharField(max_length=200)),
                ('tipo_asignatura', models.CharField(choices=[('OB', 'Obligatoria'), ('OP', 'Optativa'), ('EL', 'Electiva')], max_length=2)),
                ('naturaleza_asignatura', models.CharField(choices=[('TE', 'Teórica'), ('PR', 'Práctica'), ('TP', 'Teórico-Práctica')], max_length=2)),
                ('descripcion_asignatura', models.TextField()),
                ('objetivo_general', models.TextField()),
                ('objetivos_especificos', models.TextField()),
                ('competencias_genericas', models.TextField()),
                ('estrategias_pedagogicas_metodologicas', models.TextField()),
                ('referencias_bibliograficas', models.TextField()),
                ('primer_parcial', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('segundo_parcial', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tercer_parcial', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Microcurrículo',
                'verbose_name_plural': 'Microcurrículos',
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id_administrador', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('celular', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
            },
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id_docente', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_docente', models.CharField(max_length=100)),
                ('apellido_docente', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('celular', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
            },
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('codigo_asistencia', models.AutoField(primary_key=True, serialize=False)),
                ('asignatura', models.CharField(max_length=200)),
                ('codigo_asignatura', models.CharField(max_length=20)),
                ('grupo', models.CharField(max_length=10)),
                ('tema', models.TextField()),
                ('fecha', models.DateField()),
                ('sede', models.CharField(max_length=100)),
                ('hora', models.TimeField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='academico.aula')),
                ('docente_responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='academico.docente')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
                'ordering': ['-fecha', '-hora'],
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id_estudiante', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('CE', 'Cédula de Extranjería'), ('PA', 'Pasaporte')], max_length=2)),
                ('fecha_expedicion', models.DateField()),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('celular', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('estado_civil', models.CharField(choices=[('S', 'Soltero'), ('C', 'Casado'), ('U', 'Unión Libre'), ('D', 'Divorciado'), ('V', 'Viudo')], max_length=1)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=100)),
                ('puntaje_icfes', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('nombre_acudiente', models.CharField(max_length=100)),
                ('apellido_acudiente', models.CharField(max_length=100)),
                ('celular_acudiente', models.CharField(max_length=20)),
                ('sisben', models.CharField(blank=True, max_length=10, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('facultad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiantes', to='academico.facultad')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
            },
        ),
        migrations.CreateModel(
            name='HorarioEstudiante',
            fields=[
                ('codigo_horario', models.AutoField(primary_key=True, serialize=False)),
                ('hora', models.TimeField()),
                ('grupo', models.CharField(max_length=10)),
                ('dia', models.CharField(choices=[('LU', 'Lunes'), ('MA', 'Martes'), ('MI', 'Miércoles'), ('JU', 'Jueves'), ('VI', 'Viernes'), ('SA', 'Sábado')], max_length=2)),
                ('periodo', models.CharField(max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.aula')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='academico.estudiante')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.materia')),
            ],
            options={
                'verbose_name': 'Horario Estudiante',
                'verbose_name_plural': 'Horarios Estudiantes',
            },
        ),
        migrations.CreateModel(
            name='HorarioDocente',
            fields=[
                ('codigo_horario_docente', models.AutoField(primary_key=True, serialize=False)),
                ('hora', models.TimeField()),
                ('grupo', models.CharField(max_length=10)),
                ('dia', models.CharField(choices=[('LU', 'Lunes'), ('MA', 'Martes'), ('MI', 'Miércoles'), ('JU', 'Jueves'), ('VI', 'Viernes'), ('SA', 'Sábado')], max_length=2)),
                ('periodo', models.CharField(max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.aula')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='academico.docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.materia')),
            ],
            options={
                'verbose_name': 'Horario Docente',
                'verbose_name_plural': 'Horarios Docentes',
            },
        ),
        migrations.CreateModel(
            name='ContenidoCompetenciasEspecificas',
            fields=[
                ('codigo_competencia', models.AutoField(primary_key=True, serialize=False)),
                ('unidad_tematica', models.CharField(max_length=200)),
                ('competencias_especificas', models.TextField()),
                ('resultados_de_aprendizaje', models.TextField()),
                ('nivel_superior', models.TextField()),
                ('nivel_normal', models.TextField()),
                ('nivel_bajo', models.TextField()),
                ('nivel_deficiente', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('microcurriculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competencias', to='academico.microcurriculo')),
            ],
            options={
                'verbose_name': 'Contenido Competencias Específicas',
                'verbose_name_plural': 'Contenidos Competencias Específicas',
            },
        ),
        migrations.CreateModel(
            name='PlanMicrocurriculo',
            fields=[
                ('codigo_plan_microcurriculo', models.AutoField(primary_key=True, serialize=False)),
                ('año_lectivo', models.IntegerField()),
                ('periodo_academico', models.CharField(max_length=20)),
                ('fecha_inicio', models.DateField()),
                ('total_horas', models.IntegerField()),
                ('fecha_terminacion', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes_microcurriculo', to='academico.docente')),
                ('facultad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.facultad')),
                ('microcurriculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes', to='academico.microcurriculo')),
            ],
            options={
                'verbose_name': 'Plan de Microcurrículo',
                'verbose_name_plural': 'Planes de Microcurrículo',
            },
        ),
        migrations.CreateModel(
            name='DetallePlanMicrocurriculo',
            fields=[
                ('id_detalle', models.AutoField(primary_key=True, serialize=False)),
                ('semana', models.IntegerField()),
                ('fecha_clase', models.DateField()),
                ('tema', models.CharField(max_length=300)),
                ('descripcion_actividad', models.TextField()),
                ('horas_asignadas', models.IntegerField()),
                ('recursos_necesarios', models.TextField()),
                ('cumplido', models.BooleanField(default=False)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('plan_microcurriculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='academico.planmicrocurriculo')),
            ],
            options={
                'verbose_name': 'Detalle Plan de Microcurrículo',
                'verbose_name_plural': 'Detalles Planes de Microcurrículo',
                'ordering': ['semana', 'fecha_clase'],
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('codigo_programa', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nombre_programa', models.CharField(max_length=200)),
                ('numero_creditos', models.IntegerField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('facultad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programas', to='academico.facultad')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
            },
        ),
        migrations.AddField(
            model_name='planmicrocurriculo',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academico.programa'),
        ),
        migrations.AddField(
            model_name='microcurriculo',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='microcurriculos', to='academico.programa'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiantes', to='academico.programa'),
        ),
        migrations.CreateModel(
            name='Coordinador',
            fields=[
                ('id_coordinador', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('celular', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('pais', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordinadores', to='academico.programa')),
            ],
            options={
                'verbose_name': 'Coordinador',
                'verbose_name_plural': 'Coordinadores',
            },
        ),
        migrations.CreateModel(
            name='CargaAcademica',
            fields=[
                ('id_carga', models.AutoField(primary_key=True, serialize=False)),
                ('hora', models.TimeField()),
                ('grupo', models.CharField(max_length=10)),
                ('dia', models.CharField(choices=[('LU', 'Lunes'), ('MA', 'Martes'), ('MI', 'Miércoles'), ('JU', 'Jueves'), ('VI', 'Viernes'), ('SA', 'Sábado')], max_length=2)),
                ('periodo_carga', models.CharField(max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargas_academicas', to='academico.aula')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargas_academicas', to='academico.docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargas_academicas', to='academico.materia')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargas_academicas', to='academico.programa')),
            ],
            options={
                'verbose_name': 'Carga Académica',
                'verbose_name_plural': 'Cargas Académicas',
            },
        ),
        migrations.CreateModel(
            name='SensorAsistencia',
            fields=[
                ('codigo_sensor', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('nombre_aula', models.CharField(max_length=100)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_instalacion', models.DateTimeField(auto_now_add=True)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensores', to='academico.aula')),
            ],
            options={
                'verbose_name': 'Sensor de Asistencia',
                'verbose_name_plural': 'Sensores de Asistencia',
            },
        ),
        migrations.CreateModel(
            name='DetalleAsistencia',
            fields=[
                ('id_detalle', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.CharField(choices=[('P', 'Presente'), ('A', 'Ausente'), ('T', 'Tardanza'), ('E', 'Excusa')], default='A', max_length=1)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('asistencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='academico.asistencia')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='academico.estudiante')),
            ],
            options={
                'verbose_name': 'Detalle de Asistencia',
                'verbose_name_plural': 'Detalles de Asistencia',
                'unique_together': {('asistencia', 'estudiante')},
            },
        ),
        migrations.CreateModel(
            name='MateriaDocente',
            fields=[
                ('codigo_materia_docente', models.AutoField(primary_key=True, serialize=False)),
                ('periodo', models.CharField(max_length=20)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materias_asignadas', to='academico.docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_asignados', to='academico.materia')),
            ],
            options={
                'verbose_name': 'Materia Docente',
                'verbose_name_plural': 'Materias Docentes',
                'unique_together': {('docente', 'materia', 'periodo')},
            },
        ),
    ]
